#limpio la memoria
rm( list=ls() )  #remove all objects
gc()             #garbage collection

#librerias
require("data.table")
require("xgboost")

#cargo el dataset
dataset <- fread( "C:/Users/gtreb/Desktop/DMEyF/Datos/datasets/paquete_premium_201906_202001.txt.gz")


#paso la clase a binaria que tome valores {0,1}  enteros
dataset[ , clase01 :=  ifelse( clase_ternaria=="BAJA+2", 1L, 0L)  ]

#los campos que se van a utilizar
campos_buenos <-  setdiff(  colnames(dataset) ,  c("clase_ternaria","clase01") )

dtrain <-  dataset[ foto_mes>=201902 & foto_mes<=201910 , ]

#dejo los datos en el formato que necesita XGBoost
dgeneracion  <-   xgb.DMatrix( data  = data.matrix(  dtrain[ , campos_buenos, with=FALSE]),
                               label= dtrain$clase01
)

inspiracion <- list( "eta"= 0.08, "nrounds"= 150, "num_leaves"=660,  "colsample_bytree"= 0.24, "gamma"= 9.2)


#genero el modelo
modelo  <- xgboost( data= dgeneracion,
                    objective= "binary:logistic",
                    tree_method= "hist",
                    eta= inspiracion$eta,
                    nrounds= inspiracion$nrounds,
                    num_leaves= inspiracion$num_leaves,
                    colsample_bytree= inspiracion$colsample_bytree,
                    gamma= inspiracion$gamma
)


#aplico el modelo a los datos de test, 201911
prediccion_201911      <- predict( modelo, 
                                   data.matrix( dataset[foto_mes==201911, campos_buenos, with=FALSE ]), 
                                   type = "prob")

#evaluaciÃ³n sobre el conj de test
res_test <-   as.data.table(cbind( "numero_de_cliente" = dataset[ foto_mes==201911, numero_de_cliente],  "prob" =prediccion_201911) )
res_test[  ,  estimulo :=  as.integer( prob > 0.025)]

nov_real <- as.data.table(dataset[foto_mes==201911]$clase01)

comparacion_xgboost <- as.data.table(cbind(res_test$estimulo, nov_real))
colnames(comparacion_xgboost) <- c("predicho", "real")
table(comparacion_xgboost)

fganancia_nov_xg <- sum(  comparacion_xgboost[ predicho==1, ifelse( real==1, 29250, -750) ])
fganancia_nov_xg


#aplico el modelo a los datos sin clase, 202001
prediccion_202001    <- predict( modelo, 
                                   data.matrix( dataset[foto_mes==202001, campos_buenos, with=FALSE ]), 
                                   type = "prob")

#genero el dataset de entrega
entrega <-   as.data.table(cbind( "numero_de_cliente" = dataset[ foto_mes==202001, numero_de_cliente],  "prob" =prediccion_202001) )
entrega[  ,  estimulo :=  as.integer( prob > 0.025)]

#genero el archivo de salida
fwrite( entrega[ ,  c("numero_de_cliente", "estimulo"), with=FALSE], sep=",",  file="xgboost_inspirado_entrega.csv")

#cerrar la instancia / en el caso de dejarlo corriendo por la noche
system("sudo poweroff")
